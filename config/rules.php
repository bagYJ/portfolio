<?php
declare(strict_types=1);

use App\Enums\{CancelType, PushBizKind, RejectReason, SendType};
use App\Requests\{Ark\Request,
    AutoParking\CarEnter,
    AutoParking\CarExit,
    AutoParking\CheckFee,
    AutoParking\Payment,
    AutoParking\Refund,
    AutoParking\RegistCar,
    Bizcall\AutoMapping,
    Cu\ArrivalAlarm,
    Cu\ArrivalConfirm,
    Cu\CancelCheck,
    Cu\DeliveryAlarm,
    Cu\DeliveryConfirm,
    Cu\OrderCancel,
    Cu\OrderConfirm,
    Cu\OrderReady,
    Cu\ProductCheck,
    Infine\Approval,
    Infine\ApprovalResult,
    Page,
    Parking\Order,
    Parking\OrderList,
    Parking\OrderSearch,
    Pg\Regist,
    Push\SendUser,
    Spc\Cancel,
    Spc\OrderStatus,
    Spc\ProductStatus,
    Spc\ShopStatus,
    Spc\Stock,
    Spc\Uptime};
use Illuminate\Validation\{Rule, Rules\Enum};

return collect([
    AutoMapping::class => [
        'real_number' => 'required|string',
        'cd_biz_kind' => 'nullable|string',
        'no_order' => 'nullable|string'
    ],
    SendUser::class => [
        'udids' => 'required|array',
        'title' => 'required|string',
        'body' => 'required|string',
        'biz_kind' => ['required', Rule::in(PushBizKind::keys())],
        'biz_kind_detail' => 'nullable|string',
        'status' => 'nullable|string',
        'no_shop' => 'nullable|integer',
        'no_order' => 'nullable|string',
        'is_ordering' => 'string|in:Y,N'
    ],
    ProductCheck::class => [
        'shop_code' => 'required',
        'product_list' => 'required|array',
//        'product_list.*' => 'string|integer'
    ],
    CancelCheck::class => [
        'shop_code' => 'required',
        'no_order' => 'required|string',
        'nm_order' => 'required|string',
        'nm_nick' => 'nullable|string',
        'dt_order' => 'required|string',
        'dt_pickup' => 'required|string',
        'dt_pickup_type' => ['required', Rule::in(SendType::keys())]
    ],
    OrderCancel::class => [
        'shop_code' => 'required',
        'no_order' => 'required|string',
        'nm_order' => 'required|string',
        'cd_cancel_type' => ['required', (new Enum(CancelType::class))],
        'dt_order' => 'required|string',
        'dt_pickup' => 'required|string'
    ],
    ArrivalAlarm::class => [
        'shop_code' => 'required',
        'no_order' => 'required|string',
        'nm_order' => 'required|string',
        'yn_complete' => 'required|string',
        'at_distance' => 'required',
        'dt_order' => 'required|string',
        'dt_pickup' => 'required|string',
        'ds_pickup_type' => ['required', Rule::in(SendType::keys())],
        'nm_nick' => 'nullable|string',
        'ds_phone' => 'nullable|string',
        'ds_car_number' => 'nullable|string'
    ],
    DeliveryAlarm::class => [
        'shop_code' => 'required',
        'no_order' => 'required|string',
        'dt_pickup' => 'required|string'
    ],
    OrderConfirm::class => [
        'partner_code' => 'required|string',
        'shop_code' => 'required|string',
        'no_order' => 'required|string',
        'yn_cancel' => 'required|in:Y,N',
        'cd_reject_reason' => ['nullable', (new Enum(RejectReason::class))],
        'trans_dt' => 'required|string',
        'sign' => 'required|string',
    ],
    OrderReady::class => [
        'partner_code' => 'required|string',
        'shop_code' => 'required|string',
        'no_order' => 'required|string',
        'trans_dt' => 'required|string',
        'sign' => 'required|string',
    ],
    DeliveryConfirm::class => [
        'partner_code' => 'required|string',
        'shop_code' => 'required|string',
        'no_order' => 'required|string',
        'yn_delivery' => 'required|in:Y,N',
        'trans_dt' => 'required|string',
        'sign' => 'required|string',
    ],
    ArrivalConfirm::class => [
        'partner_code' => 'required|string',
        'shop_code' => 'required|string',
        'no_order' => 'required|string',
        'yn_confrim' => 'required|string',
        'trans_dt' => 'required|string',
        'sign' => 'required|string',
    ],
    Request::class => [
        'body' => 'required|string'
    ],
    \App\Requests\Gas\Request::class => [
        'body' => 'required|string'
    ],
    Order::class => [
        'ticketUid' => 'required|integer',
        'carPlate' => 'required|string',
        'userCode' => 'required|integer',
    ],
    OrderList::class => [
        'page' => 'nullable|integer',
        'userCode' => 'nullable|string',
    ],
    OrderSearch::class => [
        'uids' => 'required|array',
        'uids.*' => 'integer'
    ],
    RegistCar::class => [
        'interfaceCode' => 'required|string',
        'carList' => 'required|array',
        'carList.*.plateNumber' => 'required|string',
        'carList.*.regType' => 'required|string'
    ],
    CheckFee::class => [
        'interfaceCode' => 'required|string',
        'plateNumber' => 'required|string',
        'storeId' => 'required|string',
        'txId' => 'required|string'
    ],
    Payment::class => [
        'interfaceCode' => 'required|string',
        'txId' => 'required|string',
        'storeId' => 'required|string',
        'storeCategory' => 'required|string',
        'plateNumber' => 'required|string',
        'approvalPrice' => 'required',
        'approvalDate' => 'required|string',
        'approvalNumber' => 'required|string',
        'approvalResult' => 'required|string',
        'approvalMessage' => 'nullable|string',
    ],
    Refund::class => [
        'interfaceCode' => 'required|string',
        'storeId' => 'required|string',
        'plateNumber' => 'required|string',
        'txId' => 'required|string',
        'cancelPrice' => 'required|string',
        'cancelDate' => 'required|string',
    ],
    CarEnter::class => [
        'interfaceCode' => 'required|string',
        'storeId' => 'required|string',
        'plateNumber' => 'required|string',
        'storeName' => 'required|string',
        'entryTime' => 'required|string',
    ],
    CarExit::class => [
        'interfaceCode' => 'required|string',
        'plateNumber' => 'required|string',
        'storeCategory' => 'required|string',
        'storeId' => 'required|string',
        'entryTime' => 'required|string',
        'exitTime' => 'required|string',
        'txId' => 'required|string',
        'paymentFee' => 'required|string',
    ],
    Stock::class => [
        'brandCode' => 'required|string',
        'storeCode' => 'required|string',
        'menus' => 'required|array',
        'menus.*.code' => 'required|string',
        'menus.*.name' => 'nullable|string',
        'menus.*.options' => 'nullable|array',
        'menus.*.options.*.code' => 'nullable|string',
        'menus.*.options.*.name' => 'nullable|string',
    ],
    Uptime::class => [
        'brandCode' => 'required|string',
        'storeCode' => 'required|string',
        'orderId' => 'required|string',
        'arvYn' => 'required|in:Y,N',
        'arvHm' => 'nullable|string',
    ],
    Cancel::class => [
        'brandCode' => 'required|string',
        'storeCode' => 'required|string',
        'orderId' => 'required|string',
        'cancelType' => 'nullable|string',
    ],
    OrderStatus::class => [
        'brandCode' => 'required|string',
        'storeCode' => 'required|string',
        'orderId' => 'required|string',
        'providerOrderId' => 'required|string',
        'status' => 'required|string',
        'statusDateTime' => 'required|string',
        'statusMessage' => 'nullable',
        'deliveryTime' => 'nullable',
    ],
    ProductStatus::class => [
        'brandCode' => 'required|string',
        'storeCode' => 'required|string',
        'soldoutType' => 'required|in:soldout,instock',
        'menuCodes' => 'required|array',
        'resetDate' => 'nullable'
    ],
    ShopStatus::class => [
        'brandCode' => 'required|string',
        'orderType' => 'nullable|string',
        'storeStatus' => 'required|in:open,close',
        'storeCodes' => 'required|array',
    ],
    Regist::class => [
        'noOrder' => 'required|string',
        'nmOrder' => 'required|string',
//        'price' => 'required|integer',
        'nmBuyer' => 'required|string',
        'phone' => 'required|string',
        'email' => 'required|string',
        'cardNum' => 'required|string',
        'expYear' => 'required|string',
        'expMon' => 'required|string',
        'noBiz' => 'nullable|string',
        'birthday' => 'nullable|string',
        'noPin' => 'required|string',
    ],
    \App\Requests\Pg\Payment::class => [
        'nmPg' => 'required|string',
        'noOrder' => 'required|string',
        'noShop' => 'nullable|integer',
        'noUser' => 'required|integer',
        'nmBuyer' => 'required|string',
        'email' => 'required|string',
        'phone' => 'required|string',
        'price' => 'required|integer',
        'atCupDeposit' => 'nullable|integer',
        'billkey' => 'required|string',
        'nmOrder' => 'required|string',
    ],
    \App\Requests\Pg\Refund::class => [
        'nmPg' => 'required|string',
        'dsResOrderNo' => 'required|string',
        'price' => 'required|integer',
        'reason' => 'required|string',
        'noOrder' => 'nullable|string',
        'dsServerReg' => 'nullable|string',
        'nmOrder' => 'nullable|string',
    ],
    Page::class => [
        'size' => 'nullable|integer',
        'offset' => 'nullable|integer'
    ],
    \App\Requests\Infine\Cancel::class => [
        'no_order' => 'required|string',
        'infine_order' => 'required|string',
        'cancel_type' => 'required|string',
        'no_approval' => 'required|string'
    ],
    Approval::class => [
        'no_order' => 'required|string',
        'infine_order' => 'required|string',
        'car_number' => 'required|string',
        'at_price_pg' => 'required',
        'no_card' => 'required|integer',
        'ds_billkey' => 'required|string',
        'id_pointcard' => 'nullable|integer',
        'no_coupon' => 'nullable|integer',
    ],
    ApprovalResult::class => [
        'no_order' => 'required|string',
        'infine_order' => 'required|string',
        'ds_uni' => 'required|string',
        'result' => 'required|string',
        'cd_gas_kind' => 'required|string',
        'ds_unit_id' => 'required|string',
        'at_price' => 'required|integer',
        'at_liter_gas' => 'required',
        'at_liter_price' => 'required',
        'at_discount_liter' => 'required|string',
        'at_discount' => 'nullable|integer',
        'at_price_pg' => 'required',
        'no_approval' => 'required|string',
        'dt_approval' => 'required|string',
        'temp_cancel_status' => 'required|string',
        'no_approval_temp' => 'required|string',
        'dt_approval_temp' => 'required|string',
        'at_saving' => 'nullable',
        'at_total_saving' => 'nullable',
    ]
]);